// <auto-generated />
using System;
using EFCore.DataStore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EFCore.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250513104755_CaseStudy")]
    partial class CaseStudy
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EFCore.Models.Department", b =>
                {
                    b.Property<int>("Dnumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Dnumber"));

                    b.Property<string>("Dname")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Mgr_ssn")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.Property<DateTime?>("Mgr_start_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Dnumber");

                    b.HasIndex("Mgr_ssn");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("EFCore.Models.Dependent", b =>
                {
                    b.Property<string>("Essn")
                        .HasColumnType("character varying(9)")
                        .HasColumnOrder(0);

                    b.Property<string>("Dependent_name")
                        .HasColumnType("text")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("Bdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Essn", "Dependent_name");

                    b.ToTable("Dependents");
                });

            modelBuilder.Entity("EFCore.Models.DeptLocations", b =>
                {
                    b.Property<int>("Dnumber")
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    b.Property<string>("Dlocation")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnOrder(1);

                    b.HasKey("Dnumber", "Dlocation");

                    b.HasIndex("Dlocation");

                    b.ToTable("DeptLocations");
                });

            modelBuilder.Entity("EFCore.Models.Employee", b =>
                {
                    b.Property<string>("Ssn")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("Bdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Dno")
                        .HasColumnType("integer");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Minit")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Sex")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Super_ssn")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.HasKey("Ssn");

                    b.HasIndex("Super_ssn");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EFCore.Models.Location", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("EFCore.Models.Project", b =>
                {
                    b.Property<int>("Pnumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Pnumber"));

                    b.Property<int>("Dnum")
                        .HasColumnType("integer");

                    b.Property<string>("Plocation")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Pname")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("Pnumber");

                    b.HasIndex("Dnum");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("EFCore.Models.WorksOn", b =>
                {
                    b.Property<string>("Essn")
                        .HasColumnType("character varying(9)")
                        .HasColumnOrder(0);

                    b.Property<int>("Pno")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<decimal>("Hours")
                        .HasColumnType("decimal(3,1)");

                    b.HasKey("Essn", "Pno");

                    b.HasIndex("Pno");

                    b.ToTable("WorksOn");
                });

            modelBuilder.Entity("EFCore.Models.Department", b =>
                {
                    b.HasOne("EFCore.Models.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("Mgr_ssn")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("EFCore.Models.Dependent", b =>
                {
                    b.HasOne("EFCore.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("Essn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EFCore.Models.DeptLocations", b =>
                {
                    b.HasOne("EFCore.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("Dlocation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCore.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("Dnumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("EFCore.Models.Employee", b =>
                {
                    b.HasOne("EFCore.Models.Employee", "Supervisor")
                        .WithMany()
                        .HasForeignKey("Super_ssn")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("EFCore.Models.Project", b =>
                {
                    b.HasOne("EFCore.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("Dnum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EFCore.Models.WorksOn", b =>
                {
                    b.HasOne("EFCore.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("Essn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCore.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("Pno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });
#pragma warning restore 612, 618
        }
    }
}
